version: 2.1

orbs:
  artifactory: circleci/artifactory@dev:alpha
  cli: circleci/circleci-cli@0.1.2
  orb-tools: circleci/orb-tools@7.3.0

executors:
  node:
    resource_class: small
    docker:
      - image: circleci/node:10

jobs:
  all-commands:
    executor: node
    steps:
      - checkout
      - artifactory/install
      - artifactory/configure

      - run:
          name: create sample artifact files
          command: |
            echo "not a jar" > artifact1.jar
            echo "not a jar" > artifact2.jar

      # test without file spec
      - artifactory/upload:
          source: artifact1.jar
          target: local-generic/commandfolder1

      # test with file spec
      - artifactory/upload:
          use-file-spec: true
          file-spec: spec.json
          spec-vars: "spec-pattern=*.jar;spec-target=local-generic/commandfolder2"

      - artifactory/build-integration:
          build-name: generic-artifact-command

# yaml anchor filters
integration-dev_filters: &integration-dev_filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/

integration-master_filters: &integration-master_filters
  branches:
    ignore: /.*/
  tags:
    only: /master-.*/

prod-deploy_requires: &prod-deploy_requires
  [test-all-commands-master, test-upload-master, test-publish-master, test-publish-custom-master]

workflows:
  lint_pack-validate_publish-dev:
    jobs:
      - orb-tools/lint:
          lint-dir: src

      - orb-tools/pack:
          requires:
            - orb-tools/lint

      - orb-tools/publish-dev:
          orb-name: circleci/artifactory
          context: orb-publishing
          requires:
            - orb-tools/pack

      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          ssh-fingerprints: 31:25:5b:d4:ce:5b:1f:81:fe:b3:c2:b5:ac:f2:55:8f
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              ignore: master

      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-master
          context: orb-publishing
          ssh-fingerprints: 31:25:5b:d4:ce:5b:1f:81:fe:b3:c2:b5:ac:f2:55:8f
          tag: master
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              only: master

  integration_tests-prod_deploy:
    jobs:
      # triggered by non-master branch commits
      - all-commands:
          name: test-all-commands-dev
          context: orb-publishing
          filters: *integration-dev_filters

      - artifactory/upload:
          name: test-upload-dev
          context: orb-publishing
          source: artifact.jar
          target: local-generic/artifact.jar
          build-steps:
            - run: echo "not a jar" > artifact.jar
          filters: *integration-dev_filters

      - artifactory/upload:
          name: test-upload-file-spec-dev
          context: orb-publishing
          use-file-spec: true
          file-spec: spec.json
          spec-vars: "spec-pattern=*.jar;spec-target=local-generic/jobfolder"
          build-steps:
            - run:
                name: create sample artifact files
                command: |
                  echo "not a jar" > artifact1.jar
                  echo "not a jar" > artifact2.jar
          filters: *integration-dev_filters

      - artifactory/docker-publish:
          name: test-publish-dev
          context: orb-publishing
          docker-registry: orbdemos-docker.jfrog.io
          repository: docker
          build-name: hello-alpine
          docker-tag: orbdemos-docker.jfrog.io/hello-world-default:1.0-${CIRCLE_BUILD_NUM}
          pre-steps:
            - checkout
            - run: cp docker-publish-assets/* .
          filters: *integration-dev_filters

      - artifactory/docker-publish:
          name: test-publish-custom-dev
          context: orb-publishing
          docker-registry: orbdemos-docker.jfrog.io
          repository: docker
          build-name: hello-alpine-custom
          docker-tag: orbdemos-docker.jfrog.io/hello-alpine-custom:1.0-${CIRCLE_BUILD_NUM}
          docker-steps:
            - run: echo ${DOCKERTAG}
            - run: jfrog rt dl local-generic/artifact.jar docker-publish-assets/ --build-name=hello-alpine-custom --build-number=${CIRCLE_BUILD_NUM}
            - run: docker build -t $DOCKERTAG docker-publish-assets/
          filters: *integration-dev_filters

      # triggered by master branch commits
      - all-commands:
          name: test-all-commands-master
          context: orb-publishing
          filters: *integration-master_filters

      - artifactory/upload:
          name: test-upload-master
          context: orb-publishing
          source: artifact.jar
          target: local-generic/artifact.jar
          build-steps:
            - run: echo "not a jar" > artifact.jar
          filters: *integration-master_filters

      - artifactory/upload:
          name: test-upload-file-spec-master
          context: orb-publishing
          use-file-spec: true
          file-spec: spec.json
          spec-vars: "spec-pattern=*.jar;spec-target=local-generic/jobfolder"
          build-steps:
            - run:
                name: create sample artifact files
                command: |
                  echo "not a jar" > artifact1.jar
                  echo "not a jar" > artifact2.jar
          filters: *integration-master_filters

      - artifactory/docker-publish:
          name: test-publish-master
          context: orb-publishing
          docker-registry: orbdemos-docker.jfrog.io
          repository: docker
          build-name: hello-alpine
          docker-tag: orbdemos-docker.jfrog.io/hello-world-default:1.0-${CIRCLE_BUILD_NUM}
          pre-steps:
            - checkout
            - run: cp docker-publish-assets/* .
          filters: *integration-master_filters

      - artifactory/docker-publish:
          name: test-publish-custom-master
          context: orb-publishing
          docker-registry: orbdemos-docker.jfrog.io
          repository: docker
          build-name: hello-alpine-custom
          docker-tag: orbdemos-docker.jfrog.io/hello-alpine-custom:1.0-${CIRCLE_BUILD_NUM}
          docker-steps:
            - run: echo ${DOCKERTAG}
            - run: jfrog rt dl local-generic/artifact.jar docker-publish-assets/ --build-name=hello-alpine-custom --build-number=${CIRCLE_BUILD_NUM}
            - run: docker build -t $DOCKERTAG docker-publish-assets/
          filters: *integration-master_filters

      # patch, minor, or major publishing
      - orb-tools/dev-promote-prod:
          name: dev-promote-patch
          context: orb-publishing
          orb-name: circleci/artifactory
          requires: *prod-deploy_requires
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-patch.*/

      - orb-tools/dev-promote-prod:
          name: dev-promote-minor
          context: orb-publishing
          orb-name: circleci/artifactory
          release: minor
          requires: *prod-deploy_requires
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-minor.*/

      - orb-tools/dev-promote-prod:
          name: dev-promote-major
          context: orb-publishing
          orb-name: circleci/artifactory
          release: major
          requires: *prod-deploy_requires
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-major.*/
